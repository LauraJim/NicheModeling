[["description-of-initial-datasets.html", "2 Description of initial datasets 2.1 Species under study and necessary files to start an analysis", " 2 Description of initial datasets 2.1 Species under study and necessary files to start an analysis We selected two species as our focus species for all the analysis and examples: Threnetes rucheri, the band-tailed barbthroat hummingbird, resident from Central America. Catasticta nimbice, the pine white or Mexican dartwhite butterfly, known to occur from Costa Rica north to Mexico. Four types of files are needed to reproduce the ecological niche modeling exercises included in this tutorial: A csv file that contains the geographic coordinates of the sites where the species has been recorded as present, A shapefile containing a polygon which delimits the study region, Raster files with the environmental variables to be used in the analysis and an extent larger or equal to the extent of the shapefile, A csv file that contains tolerance limits of a species. Below, we describe the files that we created for our two focus species so you can create similar files for the species of your interest. 2.1.1 Occurrence data The tables used for this package are matrices that contain the location information of a species observation. Only presence data is used as absence data plays no role for the models employed. Occurrence data is available on various open databases. For all examples, data from GBIF was used. However, the tables from GBIF need to be cleaned up before they can be used as the database is aggregated from various sources with different formats and can contain various errors. There are packages available that aid in the cleaning of the data (e.g. see CoordinateCleaner). The tables for the examples have been cleaned and contain three columns: species name, longitude, latitude. These occurrence tables with three columns are called G.occ. # table with a species occurrence G.occ &lt;- read.csv(&quot;./Initial_Data/Catasticta_nimbice_occ_G.csv&quot;,header=T) head(G.occ, n=3) ## species Longitude Latitude ## 1 Catasticta nimbice -96.50500 16.06139 ## 2 Catasticta nimbice -96.50083 16.16944 ## 3 Catasticta nimbice -96.57000 16.31722 G.occ2 &lt;- read.csv(&quot;./Initial_Data/Threnetes_ruckeri_occ_G.csv&quot;,header=T) head(G.occ2, n=3) ## species long lat ## 1 Threnetes_ruckeri -79.42474 9.225965 ## 2 Threnetes_ruckeri -84.01280 10.428800 ## 3 Threnetes_ruckeri -82.95325 9.867804 2.1.1.1 How to plot occurrence data using ggplot # Set the boundaries to which the worldmap is cut ext &lt;- extent(-115, -68, -8, 35) # worldmap is added from the rnaturalearth packages world &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) class(world) # create dataframe for ggplot with both points cn.occ &lt;- data.frame(longitude = G.occ[, 2], latitude = G.occ[, 3]) thr.occ &lt;- data.frame(longitude = G.occ2[, 2], latitude = G.occ2[, 3]) data &lt;- cbind(rbind(cn.occ[,1:2],thr.occ[,1:2]), c(rep(1,nrow(cn.occ)),rep(2,nrow(thr.occ)))) data2 &lt;- data.frame(Longitude = data[, 1], Latitude = data[, 2], Type = data[,3]) # create plot ggplot(data = world) + geom_sf( ) + theme_bw() + coord_sf(xlim = c(ext[1], ext[2]), ylim = c(ext[3],ext[4]), expand = FALSE) + theme(panel.grid.major = element_line(color = &quot;white&quot;), panel.background = element_rect(fill = &quot;aliceblue&quot;)) + geom_point(data = data2, alpha=0.5, aes(x = Longitude, y = Latitude, color=factor(Type), shape=factor(Type))) + scale_shape_manual(values= c(19, 19), guide = FALSE) + scale_color_manual(name = &quot;Occurrences&quot;, labels = c(&quot;Catasticta nimbice&quot;, &quot;Threnetes ruckeri&quot;), values= c(&quot;1&quot; = &quot;seagreen4&quot;, &quot;2&quot; = &quot;royalblue3&quot;)) + theme(legend.position = c(.03, .05), legend.justification = c(&quot;left&quot;, &quot;bottom&quot;)) Figure of the of the two species Catasticta nimbice and Threnetes ruckeri . 2.1.2 Points inside the study area to plot Hutchinsons duality There are two other tables that are used for the functions of this package. They contain random samples of locations of the study area. These points serve as background points for various graphs. The first table is contains two columns with the longitude and latitude of sampled locations for the species Threnetes ruckeri. thrM &lt;- read.csv(&quot;./Initial_Data/Threnetes_ruckeri_M_G.csv&quot;,header=T) head(thrM, n=3) ## long lat ## 1 -71.58333 6.250003 ## 2 -83.91666 11.916670 ## 3 -69.74999 9.916670 dim(thrM) ## [1] 599 2 The second table contains four columns. In addition to the longitude and latitude of random locations of the study are for the species Catasticta nimbice the correlating environmental data for mean annual temperature and total annual precipitation. This file can be created by extracting the environmental data from raster layers with the function get.ecoord (see tutorial). cnM.GE &lt;- read.csv(&quot;./Initial_Data/Catasticta_nimbice_M_GE.csv&quot;,header=T) head(cnM.GE, n=3) ## long lat bio1 bio12 ## 1 -98.08333 20.41667 194 2307 ## 2 -97.91667 20.25000 199 2587 ## 3 -99.08333 21.41667 184 1781 dim(cnM.GE) ## [1] 7486 4 2.1.3 Table with species tolerance limit The table for a species tolerance limit contains the lower and upper limits of an environmental condition. In the example provided, we estimated these limits for the species Threnetes ruckeri, which is necessary information for using the Bayesian model (see Tutorial Bayesian model). Please keep in mind that the provided example is not estimated with a scientific method and only meant to aid in using and understanding the tutorial. For scientific research, the tolerance limits of a species need to be tested within a controlled lab environment. The matrix needs to have at two columns that provide the lower limit in the first column, and the upper limit in the second column. There should be as many rows as environmental conditions (usually two). The example contains the estimated tolerance limits for the mean annual temperature (MAT) and the total annual precipitation (AP). (limits &lt;- read.csv(&quot;./Initial_Data/T_ruckeri_tolerances.csv&quot;)) ## variable minimum maximum units ## 1 MAT 200 300 C*10 ## 2 AP 500 5000 mm ## Warning: package &#39;kableExtra&#39; was built under R version 4.0.5 Threnetes ruckeri tolerance limits variable minimum maximum units MAT 200 300 C*10 AP 500 5000 mm 2.1.4 Polygons of the study area The functions often use a polygon of the region of interest either to serve as a boundary in plots or to delimit rasters or sampled points to the specific region. The polygons used in the examples are shapefiles. cn.shp &lt;- readOGR(&quot;./Initial_Data/shapefiles&quot;,&quot;Catasticta_nimbice&quot;) thr.shp &lt;- readOGR(&quot;./Initial_Data/shapefiles&quot;,&quot;Threnetes_ruckeri&quot;) # in order to plot the shapefiles, they need to be adjusted first # transform polygon into WGS 84 cnM &lt;- spTransform(cn.shp, CRS(&quot;+proj=longlat +datum=WGS84&quot;)) # This function turns a map into a data frame that can more easily be # plotted with ggplot2. cnM &lt;- fortify(cnM) # takes id that is a &quot;character&quot; and converts it to a number cnM$id = as.numeric(cnM$id) thrM &lt;- spTransform(thr.shp, CRS(&quot;+proj=longlat +datum=WGS84&quot;)) # This function turns a map into a data frame that can more easily be # plotted with ggplot2. thrM &lt;- fortify(thrM) # takes id that is a &quot;character&quot; and converts it to a number thrM$id = as.numeric(thrM$id) # worldmap is added from the rnaturalearth packages world &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) class(world) # plot in ggplot ggplot(data = world) + geom_sf( ) + theme_bw() + # alpha -&gt; transparency of polygon, 0.1 = high, 0.5 = medium transparency geom_map(map=cnM, data=cnM, aes(map_id=id), color= &quot;springgreen3&quot;, fill = &quot;springgreen3&quot;, size = 1, alpha = 0.2) + geom_map(map=thrM, data=thrM, aes(map_id=id), color= &quot;royalblue3&quot;, fill = &quot;royalblue3&quot;, size = 1, alpha = 0.2) + coord_sf(xlim = c(-120, -65), ylim = c(-10, 35), expand =TRUE) + theme(panel.grid.major = element_line(color = &quot;white&quot;), panel.background = element_rect(fill = &quot;aliceblue&quot;)) Figure of the shapefiles for the study area of Catasticta nimbice (green) and Threnetes ruckeri (blue). 2.1.5 Rasters with environmental information The raster files for the functions of this package need to contain information on climatic values that are of interest for the user. The rasters used in the examples are from WorldClim and have a resolution of 10 minutes. The files usually do not need further editing. For our examples, we used the raster of the American continent. The environmental conditions of interest are the mean annual temperature, called bio1 and the the total mean precipitation, called bio12. # raster for mean annual temperature (째C x 10) bio1 &lt;- raster(&quot;./Initial_Data/bio1.asc&quot;) # raster for minimum temperature of the coldest month (째C x 10) bio6 &lt;- raster(&quot;./Initial_Data/bio6.tif&quot;) # raster for mean total precipitation (mm) bio12 &lt;- raster(&quot;./Initial_Data/bio12.asc&quot;) The raster can simply be plotted by using the plot() function: bios &lt;- stack(bio6, bio12) plot(bios) Figure of the of the coldest month of the year (in 째C x 10) and the total annual precipitation (in mm) for the American continent. Another option to plot the raster is the spplot() function of the sp package: spplot(bio1) Figure of the of the mean annual temperature (in 째C, multiplied by 10) for the American continent.. 2.1.5.1 How to crop raster layers You need to run this examples and save the resulting raster layers because these will be used in the exercises. # cropped by the shapefile for Catasticta nimbice study area bio1cn &lt;- mask(crop(bio1, cn.shp), cn.shp) bio6cn &lt;- mask(crop(bio6, cn.shp), cn.shp) bio12cn &lt;- mask(crop(bio12, cn.shp), cn.shp) # cropped by the shapefile for Threnetes ruckeri study area bio1thr &lt;- mask(crop(bio1, thr.shp), thr.shp) bio6thr &lt;- mask(crop(bio6, thr.shp), thr.shp) bio12thr &lt;- mask(crop(bio12, thr.shp), thr.shp) Example plot for the cropped raster bio6 (in ggplot): # calculate raster to points for ggplot bio6thr.p &lt;- rasterToPoints(bio6thr) bio6thr.pd &lt;- data.frame(bio6thr.p) colnames(bio6thr.pd) &lt;- c(&quot;Longitude&quot;,&quot;Latitude&quot;, &quot;MinTemp&quot;) # x11() ggplot() + geom_tile(data = bio6thr.pd,aes(x=Longitude, y=Latitude, fill=MinTemp)) + theme_bw() + scale_fill_gradient2(&quot;Minimum Temperature (째C x 10)&quot;,limits=c(50,300), low = &#39;royalblue3&#39;, mid=&#39;seagreen3&#39;, high = &#39;gold2&#39;,na.value = NA, midpoint = 200, n.breaks=6) Save the rasters for later use writeRaster(bio1cn,&quot;./Generated_Data/cn_bio1_cropped.tif&quot;, overwrite = T) writeRaster(bio6cn,&quot;./Generated_Data/cn_bio6_cropped.tif&quot;, overwrite = T) writeRaster(bio12cn,&quot;./Generated_Data/cn_bio12_cropped.tif&quot;, overwrite = T) writeRaster(bio1thr,&quot;./Generated_Data/tr_bio1_cropped.tif&quot;, overwrite = T) writeRaster(bio6thr,&quot;./Generated_Data/tr_bio6_cropped.tif&quot;, overwrite = T) writeRaster(bio12thr,&quot;./Generated_Data/tr_bio12_cropped.tif&quot;, overwrite = T) Additionally, note that you can use this code to crop and mask any raster layer to the study area of each species. This is something you will need to do before doing some future examples. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
